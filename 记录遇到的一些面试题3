1、实现extend函数
对象浅拷贝
 function extend(target,source){
    for(var p in source){
        if(source.hasOwnProperty(p)){
            target[p]=source[p]
        }
    }
    return target
}
//test
var a={test:1};
var b={test2:2};
extend(a,b);
console.log(a);//output `{ test: 1, test2: 2 }`

最简单的对象深拷贝
b = JSON.parse( JSON.stringify(a) )
不过这有局限性：

无法复制函数
原型链没了，对象就是object，所属的类没了。

2、promise原理
参考文章：https://segmentfault.com/a/1190000009478377
现在回顾下Promise的实现过程，其主要使用了设计模式中的观察者模式：
通过Promise.prototype.then和Promise.prototype.catch方法将观察者方法注册到被观察者Promise对象中，同时返回一个新的Promise对象，以便可以链式调用。
被观察者管理内部pending、fulfilled和rejected的状态转变，同时通过构造函数中传递的resolve和reject方法以主动触发状态转变和通知观察者。

3、左边定宽，右边自适应布局
  <div class="container">
            <div class="left">left</div>
            <div class="right">right</div>
    </div>
方法1:
```
<style>
     .left{
         
         float: left;
         width: 100px;
         background: red;   
     }
     .right{
         margin-left: 100px;
         background: yellow;
              
     }
    </style>
```
方法二：
···
<style>
     .container{
         display: flex;
     }
     .left{
         
        
         width: 100px;
         background: red;   
     }
     .right{
         flex:1;
         background: yellow;
         
              
     }
    </style>
···
方法3:
···
<style>
     .container{
        background: blue;
     }
     .left{
         
        position: absolute;
         width: 100px;
         background: red;   
     }
     .right{
         padding-left: 100px;
         background: yellow;
         
              
     }
 </style>
···

4、vertical-align
参考文章：https://zhuanlan.zhihu.com/p/28626505?utm_source=wechat_session&utm_medium=social
5、bfc
参考文章:https://juejin.im/entry/59c3713a518825396f4f6969
6、数组传引用
参考文章：https://www.cnblogs.com/yuyifan/p/6204365.html
7 、var、let、const区别
参考文章：https://www.zhihu.com/question/52662013
